from Products.Five.browser import BrowserView
from plone.app.vulnerabilities.content.vulnerability import AccessVectorVocabulary, ComplexityVocabulary, ImpactVocabulary, AuthenticationVocabulary


class VulnerabilityView(BrowserView): 

    @property
    def cvss_scores(self):

        scores = []
        term = AccessVectorVocabulary.getTerm(self.context.cvss_access_vector)
        scores.append({"label": "Vector",
                       "css-class":  term.token,
                       "value": term.title})

        term = ComplexityVocabulary.getTerm(self.context.cvss_access_complexity)
        scores.append({"label": "Complexity",
                       "css-class": term.token,
                       "value": term.title})

        term = AuthenticationVocabulary.getTerm(self.context.cvss_authentication)
        scores.append({"label": "Authentication",
                       "css-class":  term.token,
                       "value": term.title})

        term = ImpactVocabulary.getTerm(self.context.cvss_confidentiality_impact)
        scores.append({"label": "Confidentiality",
                       "css-class": term.token,
                       "value": term.title})
        
        term = ImpactVocabulary.getTerm(self.context.cvss_integrity_impact)
        scores.append({"label": "Integrity",
                       "css-class":  term.token,
                       "value": term.title})

        term = ImpactVocabulary.getTerm(self.context.cvss_availability_impact)
        scores.append({"label": "Availability",
                       "css-class": term.token,
                       "value": term.title})

        return scores

    @property
    def overall_score(self):
        """ Scoring, based on http://www.first.org/cvss/cvss-guide#i2.4
        """

        scoring = ["low", "medium", "high"]
        impact_scoring = [0.0, 0.275, 0.660]
        authentication_scoring = [0.45, 0.56, 0.704]
        complexity_scoring = [0.35, 0.61, 0.71]
        vector_scoring = [0.395, 0.646, 1.0]

        access_vector = vector_scoring[scoring.index(AccessVectorVocabulary.getTerm(self.context.cvss_access_vector).token)]
        access_complexity = complexity_scoring[scoring.index(ComplexityVocabulary.getTerm(self.context.cvss_access_complexity).token)]
        authentication = authentication_scoring[scoring.index(AuthenticationVocabulary.getTerm(self.context.cvss_authentication).token)]
        conf_impact = impact_scoring[scoring.index(ImpactVocabulary.getTerm(self.context.cvss_confidentiality_impact).token)]
        integ_impact = impact_scoring[scoring.index(ImpactVocabulary.getTerm(self.context.cvss_integrity_impact).token)]
        avail_impact = impact_scoring[scoring.index(ImpactVocabulary.getTerm(self.context.cvss_availability_impact).token)]
        
        impact = 10.41*(1-(1-conf_impact)*(1-integ_impact)*(1-avail_impact))
        exploitability = 20* access_vector*access_complexity*authentication

        if impact == 0:
            f_impact = 0
        else:
            f_impact = 1.176
        
        base_score = round(((0.6*impact)+(0.4*exploitability)-1.5)*f_impact, 1)
        
        return base_score